//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/superproj/onex.

// Code generated by defaulter-gen. DO NOT EDIT.

package v1beta1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// RegisterDefaults adds defaulters functions to the given scheme.
// Public to allow building arbitrary schemes.
// All generated defaulters are covering - they call all nested defaulters.
func RegisterDefaults(scheme *runtime.Scheme) error {
	scheme.AddTypeDefaultingFunc(&Evaluate{}, func(obj interface{}) { SetObjectDefaults_Evaluate(obj.(*Evaluate)) })
	scheme.AddTypeDefaultingFunc(&EvaluateList{}, func(obj interface{}) { SetObjectDefaults_EvaluateList(obj.(*EvaluateList)) })
	scheme.AddTypeDefaultingFunc(&ModelCompare{}, func(obj interface{}) { SetObjectDefaults_ModelCompare(obj.(*ModelCompare)) })
	scheme.AddTypeDefaultingFunc(&ModelCompareList{}, func(obj interface{}) { SetObjectDefaults_ModelCompareList(obj.(*ModelCompareList)) })
	return nil
}

func SetObjectDefaults_Evaluate(in *Evaluate) {
	SetDefaults_Evaluate(in)
	SetDefaults_EvaluateSpec(&in.Spec)
}

func SetObjectDefaults_EvaluateList(in *EvaluateList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_Evaluate(a)
	}
}

func SetObjectDefaults_ModelCompare(in *ModelCompare) {
	SetDefaults_ModelCompare(in)
	SetDefaults_ModelCompareSpec(&in.Spec)
	SetDefaults_EvaluateSpec(&in.Spec.Template.Spec)
}

func SetObjectDefaults_ModelCompareList(in *ModelCompareList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_ModelCompare(a)
	}
}
