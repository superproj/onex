// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/superproj/onex.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/superproj/onex/pkg/apis/apps/v1beta1"
	errors "github.com/superproj/onex/pkg/errors"
)

// MinerSetStatusApplyConfiguration represents an declarative configuration of the MinerSetStatus type for use
// with apply.
type MinerSetStatusApplyConfiguration struct {
	Replicas             *int32                      `json:"replicas,omitempty"`
	FullyLabeledReplicas *int32                      `json:"fullyLabeledReplicas,omitempty"`
	ReadyReplicas        *int32                      `json:"readyReplicas,omitempty"`
	AvailableReplicas    *int32                      `json:"availableReplicas,omitempty"`
	ObservedGeneration   *int64                      `json:"observedGeneration,omitempty"`
	FailureReason        *errors.MinerSetStatusError `json:"failureReason,omitempty"`
	FailureMessage       *string                     `json:"failureMessage,omitempty"`
	Conditions           *v1beta1.Conditions         `json:"conditions,omitempty"`
}

// MinerSetStatusApplyConfiguration constructs an declarative configuration of the MinerSetStatus type for use with
// apply.
func MinerSetStatus() *MinerSetStatusApplyConfiguration {
	return &MinerSetStatusApplyConfiguration{}
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *MinerSetStatusApplyConfiguration) WithReplicas(value int32) *MinerSetStatusApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithFullyLabeledReplicas sets the FullyLabeledReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FullyLabeledReplicas field is set to the value of the last call.
func (b *MinerSetStatusApplyConfiguration) WithFullyLabeledReplicas(value int32) *MinerSetStatusApplyConfiguration {
	b.FullyLabeledReplicas = &value
	return b
}

// WithReadyReplicas sets the ReadyReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyReplicas field is set to the value of the last call.
func (b *MinerSetStatusApplyConfiguration) WithReadyReplicas(value int32) *MinerSetStatusApplyConfiguration {
	b.ReadyReplicas = &value
	return b
}

// WithAvailableReplicas sets the AvailableReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AvailableReplicas field is set to the value of the last call.
func (b *MinerSetStatusApplyConfiguration) WithAvailableReplicas(value int32) *MinerSetStatusApplyConfiguration {
	b.AvailableReplicas = &value
	return b
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *MinerSetStatusApplyConfiguration) WithObservedGeneration(value int64) *MinerSetStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithFailureReason sets the FailureReason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureReason field is set to the value of the last call.
func (b *MinerSetStatusApplyConfiguration) WithFailureReason(value errors.MinerSetStatusError) *MinerSetStatusApplyConfiguration {
	b.FailureReason = &value
	return b
}

// WithFailureMessage sets the FailureMessage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureMessage field is set to the value of the last call.
func (b *MinerSetStatusApplyConfiguration) WithFailureMessage(value string) *MinerSetStatusApplyConfiguration {
	b.FailureMessage = &value
	return b
}

// WithConditions sets the Conditions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Conditions field is set to the value of the last call.
func (b *MinerSetStatusApplyConfiguration) WithConditions(value v1beta1.Conditions) *MinerSetStatusApplyConfiguration {
	b.Conditions = &value
	return b
}
