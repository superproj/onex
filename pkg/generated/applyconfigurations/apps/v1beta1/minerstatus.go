// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/superproj/onex.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/superproj/onex/pkg/apis/apps/v1beta1"
	errors "github.com/superproj/onex/pkg/errors"
	v1 "github.com/superproj/onex/pkg/generated/applyconfigurations/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// MinerStatusApplyConfiguration represents an declarative configuration of the MinerStatus type for use
// with apply.
type MinerStatusApplyConfiguration struct {
	PodRef             *v1.ObjectReferenceApplyConfiguration `json:"podRef,omitempty"`
	LastUpdated        *metav1.Time                          `json:"lastUpdated,omitempty"`
	FailureReason      *errors.MinerStatusError              `json:"failureReason,omitempty"`
	FailureMessage     *string                               `json:"failureMessage,omitempty"`
	Addresses          *v1beta1.MinerAddresses               `json:"addresses,omitempty"`
	Phase              *string                               `json:"phase,omitempty"`
	ObservedGeneration *int64                                `json:"observedGeneration,omitempty"`
	Conditions         *v1beta1.Conditions                   `json:"conditions,omitempty"`
}

// MinerStatusApplyConfiguration constructs an declarative configuration of the MinerStatus type for use with
// apply.
func MinerStatus() *MinerStatusApplyConfiguration {
	return &MinerStatusApplyConfiguration{}
}

// WithPodRef sets the PodRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PodRef field is set to the value of the last call.
func (b *MinerStatusApplyConfiguration) WithPodRef(value *v1.ObjectReferenceApplyConfiguration) *MinerStatusApplyConfiguration {
	b.PodRef = value
	return b
}

// WithLastUpdated sets the LastUpdated field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastUpdated field is set to the value of the last call.
func (b *MinerStatusApplyConfiguration) WithLastUpdated(value metav1.Time) *MinerStatusApplyConfiguration {
	b.LastUpdated = &value
	return b
}

// WithFailureReason sets the FailureReason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureReason field is set to the value of the last call.
func (b *MinerStatusApplyConfiguration) WithFailureReason(value errors.MinerStatusError) *MinerStatusApplyConfiguration {
	b.FailureReason = &value
	return b
}

// WithFailureMessage sets the FailureMessage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureMessage field is set to the value of the last call.
func (b *MinerStatusApplyConfiguration) WithFailureMessage(value string) *MinerStatusApplyConfiguration {
	b.FailureMessage = &value
	return b
}

// WithAddresses sets the Addresses field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Addresses field is set to the value of the last call.
func (b *MinerStatusApplyConfiguration) WithAddresses(value v1beta1.MinerAddresses) *MinerStatusApplyConfiguration {
	b.Addresses = &value
	return b
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *MinerStatusApplyConfiguration) WithPhase(value string) *MinerStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *MinerStatusApplyConfiguration) WithObservedGeneration(value int64) *MinerStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithConditions sets the Conditions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Conditions field is set to the value of the last call.
func (b *MinerStatusApplyConfiguration) WithConditions(value v1beta1.Conditions) *MinerStatusApplyConfiguration {
	b.Conditions = &value
	return b
}
