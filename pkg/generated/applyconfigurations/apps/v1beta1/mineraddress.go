// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/superproj/onex.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/superproj/onex/pkg/apis/apps/v1beta1"
)

// MinerAddressApplyConfiguration represents an declarative configuration of the MinerAddress type for use
// with apply.
type MinerAddressApplyConfiguration struct {
	Type    *v1beta1.MinerAddressType `json:"type,omitempty"`
	Address *string                   `json:"address,omitempty"`
}

// MinerAddressApplyConfiguration constructs an declarative configuration of the MinerAddress type for use with
// apply.
func MinerAddress() *MinerAddressApplyConfiguration {
	return &MinerAddressApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *MinerAddressApplyConfiguration) WithType(value v1beta1.MinerAddressType) *MinerAddressApplyConfiguration {
	b.Type = &value
	return b
}

// WithAddress sets the Address field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Address field is set to the value of the last call.
func (b *MinerAddressApplyConfiguration) WithAddress(value string) *MinerAddressApplyConfiguration {
	b.Address = &value
	return b
}
