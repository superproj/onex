// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/superproj/onex.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/superproj/onex/pkg/apis/apps/v1beta1"
	errors "github.com/superproj/onex/pkg/errors"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ModelCompareStatusApplyConfiguration represents an declarative configuration of the ModelCompareStatus type for use
// with apply.
type ModelCompareStatusApplyConfiguration struct {
	FailureReason  *errors.MinerStatusError `json:"failureReason,omitempty"`
	FailureMessage *string                  `json:"failureMessage,omitempty"`
	StartedAt      *v1.Time                 `json:"startedAt,omitempty"`
	EndedAt        *v1.Time                 `json:"endedAt,omitempty"`
	Phase          *string                  `json:"phase,omitempty"`
	Conditions     *v1beta1.Conditions      `json:"conditions,omitempty"`
}

// ModelCompareStatusApplyConfiguration constructs an declarative configuration of the ModelCompareStatus type for use with
// apply.
func ModelCompareStatus() *ModelCompareStatusApplyConfiguration {
	return &ModelCompareStatusApplyConfiguration{}
}

// WithFailureReason sets the FailureReason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureReason field is set to the value of the last call.
func (b *ModelCompareStatusApplyConfiguration) WithFailureReason(value errors.MinerStatusError) *ModelCompareStatusApplyConfiguration {
	b.FailureReason = &value
	return b
}

// WithFailureMessage sets the FailureMessage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureMessage field is set to the value of the last call.
func (b *ModelCompareStatusApplyConfiguration) WithFailureMessage(value string) *ModelCompareStatusApplyConfiguration {
	b.FailureMessage = &value
	return b
}

// WithStartedAt sets the StartedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartedAt field is set to the value of the last call.
func (b *ModelCompareStatusApplyConfiguration) WithStartedAt(value v1.Time) *ModelCompareStatusApplyConfiguration {
	b.StartedAt = &value
	return b
}

// WithEndedAt sets the EndedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EndedAt field is set to the value of the last call.
func (b *ModelCompareStatusApplyConfiguration) WithEndedAt(value v1.Time) *ModelCompareStatusApplyConfiguration {
	b.EndedAt = &value
	return b
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *ModelCompareStatusApplyConfiguration) WithPhase(value string) *ModelCompareStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// WithConditions sets the Conditions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Conditions field is set to the value of the last call.
func (b *ModelCompareStatusApplyConfiguration) WithConditions(value v1beta1.Conditions) *ModelCompareStatusApplyConfiguration {
	b.Conditions = &value
	return b
}
