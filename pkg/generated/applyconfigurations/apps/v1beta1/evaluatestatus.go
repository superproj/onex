// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/superproj/onex.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	appsv1beta1 "github.com/superproj/onex/pkg/apis/apps/v1beta1"
	errors "github.com/superproj/onex/pkg/errors"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// EvaluateStatusApplyConfiguration represents an declarative configuration of the EvaluateStatus type for use
// with apply.
type EvaluateStatusApplyConfiguration struct {
	FailureReason  *errors.MinerStatusError             `json:"failureReason,omitempty"`
	FailureMessage *string                              `json:"failureMessage,omitempty"`
	Addresses      *EvaluateAddressesApplyConfiguration `json:"addresses,omitempty"`
	StartedAt      *v1.Time                             `json:"startedAt,omitempty"`
	EndedAt        *v1.Time                             `json:"endedAt,omitempty"`
	ArthurID       *string                              `json:"arthurID,omitempty"`
	Phase          *string                              `json:"phase,omitempty"`
	Conditions     *appsv1beta1.Conditions              `json:"conditions,omitempty"`
}

// EvaluateStatusApplyConfiguration constructs an declarative configuration of the EvaluateStatus type for use with
// apply.
func EvaluateStatus() *EvaluateStatusApplyConfiguration {
	return &EvaluateStatusApplyConfiguration{}
}

// WithFailureReason sets the FailureReason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureReason field is set to the value of the last call.
func (b *EvaluateStatusApplyConfiguration) WithFailureReason(value errors.MinerStatusError) *EvaluateStatusApplyConfiguration {
	b.FailureReason = &value
	return b
}

// WithFailureMessage sets the FailureMessage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureMessage field is set to the value of the last call.
func (b *EvaluateStatusApplyConfiguration) WithFailureMessage(value string) *EvaluateStatusApplyConfiguration {
	b.FailureMessage = &value
	return b
}

// WithAddresses sets the Addresses field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Addresses field is set to the value of the last call.
func (b *EvaluateStatusApplyConfiguration) WithAddresses(value *EvaluateAddressesApplyConfiguration) *EvaluateStatusApplyConfiguration {
	b.Addresses = value
	return b
}

// WithStartedAt sets the StartedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartedAt field is set to the value of the last call.
func (b *EvaluateStatusApplyConfiguration) WithStartedAt(value v1.Time) *EvaluateStatusApplyConfiguration {
	b.StartedAt = &value
	return b
}

// WithEndedAt sets the EndedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EndedAt field is set to the value of the last call.
func (b *EvaluateStatusApplyConfiguration) WithEndedAt(value v1.Time) *EvaluateStatusApplyConfiguration {
	b.EndedAt = &value
	return b
}

// WithArthurID sets the ArthurID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ArthurID field is set to the value of the last call.
func (b *EvaluateStatusApplyConfiguration) WithArthurID(value string) *EvaluateStatusApplyConfiguration {
	b.ArthurID = &value
	return b
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *EvaluateStatusApplyConfiguration) WithPhase(value string) *EvaluateStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// WithConditions sets the Conditions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Conditions field is set to the value of the last call.
func (b *EvaluateStatusApplyConfiguration) WithConditions(value appsv1beta1.Conditions) *EvaluateStatusApplyConfiguration {
	b.Conditions = &value
	return b
}
