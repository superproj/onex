// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/superproj/onex.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// EvaluateAddressesApplyConfiguration represents an declarative configuration of the EvaluateAddresses type for use
// with apply.
type EvaluateAddressesApplyConfiguration struct {
	HDFSRoot          *string `json:"hdfsRoot,omitempty"`
	HDFSPtPath        *string `json:"hdfsPTPath,omitempty"`
	TOSTrainDataPath  *string `json:"tosTrainDataPath,omitempty"`
	TOSTestDataPath   *string `json:"tosTestDataPath,omitempty"`
	TOSTrainDataCount *int64  `json:"tosTrainDataCount,omitempty"`
	TOSTestDataConut  *int64  `json:"tosTestDataCount,omitempty"`
}

// EvaluateAddressesApplyConfiguration constructs an declarative configuration of the EvaluateAddresses type for use with
// apply.
func EvaluateAddresses() *EvaluateAddressesApplyConfiguration {
	return &EvaluateAddressesApplyConfiguration{}
}

// WithHDFSRoot sets the HDFSRoot field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HDFSRoot field is set to the value of the last call.
func (b *EvaluateAddressesApplyConfiguration) WithHDFSRoot(value string) *EvaluateAddressesApplyConfiguration {
	b.HDFSRoot = &value
	return b
}

// WithHDFSPtPath sets the HDFSPtPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HDFSPtPath field is set to the value of the last call.
func (b *EvaluateAddressesApplyConfiguration) WithHDFSPtPath(value string) *EvaluateAddressesApplyConfiguration {
	b.HDFSPtPath = &value
	return b
}

// WithTOSTrainDataPath sets the TOSTrainDataPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TOSTrainDataPath field is set to the value of the last call.
func (b *EvaluateAddressesApplyConfiguration) WithTOSTrainDataPath(value string) *EvaluateAddressesApplyConfiguration {
	b.TOSTrainDataPath = &value
	return b
}

// WithTOSTestDataPath sets the TOSTestDataPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TOSTestDataPath field is set to the value of the last call.
func (b *EvaluateAddressesApplyConfiguration) WithTOSTestDataPath(value string) *EvaluateAddressesApplyConfiguration {
	b.TOSTestDataPath = &value
	return b
}

// WithTOSTrainDataCount sets the TOSTrainDataCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TOSTrainDataCount field is set to the value of the last call.
func (b *EvaluateAddressesApplyConfiguration) WithTOSTrainDataCount(value int64) *EvaluateAddressesApplyConfiguration {
	b.TOSTrainDataCount = &value
	return b
}

// WithTOSTestDataConut sets the TOSTestDataConut field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TOSTestDataConut field is set to the value of the last call.
func (b *EvaluateAddressesApplyConfiguration) WithTOSTestDataConut(value int64) *EvaluateAddressesApplyConfiguration {
	b.TOSTestDataConut = &value
	return b
}
